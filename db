#! /usr/bin/bash
shopt -s extglob 
clear
source "$(dirname "$0")/table"

########################################################
if [ -d ~/.local/bin/iti ]; then
    cd ~/.local/bin/iti
else
    mkdir -p ~/.local/bin/iti
    cd ~/.local/bin/iti
fi
########################################################
select option in CreateDB ListDB RenameDB ConnectDB DropDB Exit
do
    case $option in 
      "CreateDB")
	   while true; 
	   do
		read -p "Please Enter Database name: " dbName
		if [[ $dbName =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]
		then
		    break
		else
		    echo "Invalid Database name."
		    echo "Please enter a name with lowercase, uppercase letters, numbers, and underscores (_)."
		fi
	    done
	    
            if [ -d "$dbName" ]; then
                echo "Database '$dbName' already exists."
            else
                mkdir "$dbName"
                echo "Database '$dbName' created successfully."
            fi
           ;;
########################################################
    "ListDB")
	current_dir=$(pwd)
        echo "Available Databases are:"
        for db in $current_dir/*/
        do
	     if [ -d "$db" ]
	     then
	        echo "$(basename "$db")"
	     fi

        done
        ;;
########################################################
	"RenameDB")
            read -p "Please Enter old Database name: " oldName
            if [ -d "$oldName" ]
            then
                 while true; 
	   	 do
			read -p "Please Enter new Database name: " newName
			if [[ $newName =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]
			then
			    break
			else
			    echo "Invalid Database name."
			    echo "Please enter a name with lowercase, uppercase letters, numbers, and underscores (_)."
			fi
	        done

                 if [ -d "$newName" ]
                 then
                    echo  "$newName Database already exist" 
                 else 
		    mv $oldName $newName
		    echo "Database renamed successfully with $newName"
		 fi
            else
                echo "Database '$oldName' not exist."
            fi
           ;;
########################################################
    "ConnectDB")
    echo "Which Databases You Want To Connect?"
 
    i=1

    for db in */; do
        echo "$i) ${db%%/}"
        i=$((i + 1))
    done
    
    read -p "Enter the number of the database to connect to: " dbChoice

    i=1
    for db in */; do
        if [ "$dbChoice" -eq "$i" ]; then
            dbName="${db%%/}"
            break
        fi
        i=$((i + 1))
    done
    
    if [ -n "$dbName" ]; then
        echo "Connected to '$dbName' successfully."

        while true; do
            echo "Select an option:"
            echo "1) Create Table"
            echo "2) List Tables"
            echo "3) Drop Table"
            echo "4) Select from Table"
            echo "5) Insert into Table"
            echo "6) Update from Table"
	    echo "7) Delete from Table"
            echo "8) Disconnect"
            read -p "Enter your choice (1:8): " choice

            case $choice in
                1)
                    create_table
                    ;;
                2)
                    list_table
                    ;;
                3)
                    drop_table
                    ;;
                4)
                    echo "select from Table option selected."
                    ;;
                5)
                    echo "insert into Table option selected."
                    ;;
                6)
                    echo "Update from Table option selected."
                    ;;
		7)
                    echo "delete from Table option selected."
                    ;;
                8)
                    echo "Disconnecting from database '$dbName'."
		    unset dbName
		    break
                    ;;
                *)
                    echo "Invalid choice. Please try again."
                    ;;
            esac
        done
    else
        echo "Invalid selection. No database found."
    fi
    ;;

########################################################
"DropDB")
    echo "Databases Available for Deletion:"
    i=1
    for db in */; do
        echo "$i) ${db%%/}"
        i=$((i + 1))
    done
    
    read -p "Enter the number of the database to delete: " dbChoice
    i=1
    for db in */; do
        if [ "$dbChoice" -eq "$i" ]; then
            dbName="${db%%/}"
            break
        fi
        i=$((i + 1))
    done
    if [ -n "$dbName" ]
    then
	read -p "Are you sure you want to delete '$dbName'? (yes or no): " check
	while [[ ! "$check" =~ ^(yes|no|y|n)$ ]]; 
	do
	    echo "Invalid option, Please enter (yes or no)."
	    read -p "Are you sure you want to delete (yes or no): " check
	done

	if [[ "$check" =~ ^(yes|y)$ ]]
	then
	    rm -r "$dbName"
	    echo "Database '$dbName' deleted successfully."
		    
	elif [[ "$check" =~ ^(no|n)$ ]]
	then
		echo "deletion cancelled"
	fi 
     fi
    ;;
########################################################
    "Exit")
        echo "Goodbye!"
        break
        ;;
    *)
        echo "Invalid option. Please select a valid number."
        ;;
    esac
done
########################################################



